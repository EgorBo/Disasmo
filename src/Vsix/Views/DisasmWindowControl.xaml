<UserControl x:Class="Disasmo.DisasmWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:disasmo="clr-namespace:Disasmo"
             xmlns:utils="clr-namespace:Disasmo.Utils"
             mc:Ignorable="d" TextElement.Foreground="Black"
             d:DesignHeight="1000" d:DesignWidth="800">
    <UserControl.DataContext>
        <disasmo:MainViewModel x:Name="MainViewModel"/>
    </UserControl.DataContext>
    <UserControl.InputBindings>
        <KeyBinding Key="R" Modifiers="Control" Command="{Binding RefreshCommand}"/>
    </UserControl.InputBindings>
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
        <utils:InversedBooleanToVisibilityConverter x:Key="InversedBooleanToVisibility" />
        <utils:BoolToFontWeightConverter x:Key="BoolToFontWeightConverter" />

        <Style x:Key="AvalonEditStyle" TargetType="avalonedit:TextEditor">
			<Setter Property="FontSize" Value="{Binding SettingsVm.FontSize}"/>
			<Setter Property="WordWrap" Value="True" />
            <Setter Property="BorderBrush" Value="LightGray" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="FontFamily" Value="Consolas" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="ShowLineNumbers" Value="True" />
            <Setter Property="LineNumbersForeground" Value="Silver" />
        </Style>
		<Style x:Key="textBoxWithErrors" TargetType="TextBox">
			<Style.Triggers>
				<Trigger Property="Validation.HasError" Value="true">
					<Setter Property="ToolTip"
							Value="{Binding RelativeSource={x:Static RelativeSource.Self},
						Path=(Validation.Errors)[0].ErrorContent}"/>
				</Trigger>
			</Style.Triggers>
		</Style>
	</UserControl.Resources>
    <Grid Background="#EEF5FD">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Background="#EEF5FD">
            <StackPanel Height="30" Orientation="Horizontal">
               <CheckBox Margin="8,8,6,0" IsChecked="{Binding SettingsVm.UseCustomRuntime, Mode=TwoWay}">
                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">
                        <Run Text="Local"/>
                        <Run Text="dotnet/runtime" FontWeight="SemiBold" />
                        <Run Text="repo:"/>
                    </TextBlock>
                </CheckBox>
                <Grid>
                    <TextBox Width="196" Height="22" Text="{Binding SettingsVm.PathToLocalCoreClr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             IsEnabled="{Binding SettingsVm.UseCustomRuntime}"/>
                    <Button Command="{Binding SettingsVm.BrowseCommand}"  Foreground="Black" Content=" ... " BorderThickness="0" HorizontalAlignment="Right" VerticalAlignment="Center" Height="18" Margin="2,0,2,0"/>
                </Grid>
                <Button VerticalAlignment="Center" Margin="5,0,0,0" Height="22" Width="60" BorderThickness="0" Command="{Binding RefreshCommand}" Content="Reload"/> 
                <StackPanel Margin="10,0,2,0" Orientation="Horizontal">
                    <TextBlock Text="JIT kind:" VerticalAlignment="Center"/>
                    <ComboBox Margin="4,0,0,0" Height="22" VerticalAlignment="Center"
                              ItemsSource="{Binding SettingsVm.CustomJits}" SelectedItem="{Binding SettingsVm.SelectedCustomJit, Mode=TwoWay}" Width="140" />
                </StackPanel>
            </StackPanel>
        </Grid>

        <StackPanel Grid.Row="1" >
            <TextBlock Margin="8,-2,0,4"  
                       Foreground="Blue" FontSize="10" >
                <Run Text="Open 'Tools/Options/Keyboard' in VS, find 'Disasmo' command and assign a hot-key for faster iterations! Current one is"/>
                <Run Text="{Binding DefaultHotKey, Mode=OneWay}"/>
            </TextBlock>
        </StackPanel>

        <TabControl x:Name="TabControl" Grid.Row="2">
            <TabItem Header="Output" Width="66">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <!--TODO: not finished yet (list of phases to jump)-->
                    <Grid Width="200" HorizontalAlignment="Stretch" 
                          Visibility="Collapsed">
                        <TextBlock Text="JIT phases:" Margin="4" />
                        <ListBox 
                                 ItemsSource="{Binding JitDumpPhases}" 
                                 Margin="0,0,1,0"
                                 BorderThickness="0"
                                 SelectionMode="Single"
                                 HorizontalContentAlignment="Stretch"
                                 ScrollViewer.CanContentScroll="True"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                 ScrollViewer.VerticalScrollBarVisibility="Hidden">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Button Content="{Binding .}" Height="19" FontSize="11" Margin="-5,-1,-4,-1"  />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </Grid>
					<avalonedit:TextEditor Grid.Column="1" x:Name="OutputEditor" Style="{StaticResource AvalonEditStyle}" 
										   PreviewMouseWheel="AvalonEdit_MouseWheel"/>
                    <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Column="1" Margin="0,6,26,0">
                        <TextBlock HorizontalAlignment="Left">
                            <Hyperlink Command="{Binding OpenInVSCode}">Open in external editor</Hyperlink>
                        </TextBlock>
                        <TextBlock HorizontalAlignment="Left">
                            <Hyperlink Command="{Binding OpenInVS}">Open in VS editor</Hyperlink>
                        </TextBlock>
                    </StackPanel>
                </Grid>
            </TabItem>

            <TabItem Header="Previous output" >
                <Grid>
					<avalonedit:TextEditor x:Name="OutputEditorPrev" Style="{StaticResource AvalonEditStyle}" 
										   PreviewMouseWheel="AvalonEdit_MouseWheel"/>
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,6,26,0">
                        <Hyperlink Command="{Binding RunDiffWithPrevious}">Show diff</Hyperlink>
                    </TextBlock>
                </Grid>
            </TabItem>

            <TabItem Header="Flowgraph">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Row="0" Grid.ColumnSpan="2">
                        <CheckBox IsEnabled="{Binding SettingsVm.UseCustomRuntime}" Margin="8,8,0,0" Content="Enable flowgraphs (toggles JitDump)" IsChecked="{Binding SettingsVm.FgEnable, Mode=TwoWay}"/>
                        <TextBlock Foreground="Gray" Margin="8,2,0,6" Text="Hit 'Reload' button to build it. Also, check 'Output' tab for errors if any. NOTE: graphs aren't rendered for single-block functions."/>
                    </StackPanel>

                    <TextBlock Margin="0,2,8,0" HorizontalAlignment="Right" Grid.Column="1" VerticalAlignment="Top" >
                        <Hyperlink RequestNavigate="OnOpenFolderWithFlowGraphs" 
                                   NavigateUri="{Binding SelectedPhase.DotFileUrl}">open folder with these graphs</Hyperlink>
                    </TextBlock>

                    <ScrollViewer Grid.Row="1" Grid.Column="1"
                                  HorizontalScrollBarVisibility="Auto" 
                                  VerticalScrollBarVisibility="Auto">
                        <Image Source="{Binding SelectedPhase.ImageUrl}" Stretch="None" />
                    </ScrollViewer>

                    <Grid Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                          Visibility="{Binding SelectedPhase.IsBusy, Converter={StaticResource BooleanToVisibility}}" 
                          Background="#A8FFFFFF">
                        <ProgressBar IsIndeterminate="True" Width="200" Height="20"/>
                        <TextBlock  Foreground="Black" Text="Loading..." HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,60,0,0" FontSize="14" />
                    </Grid>

                    <ListBox ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                             Grid.Row="1" ItemsSource="{Binding FgPhases}" SelectedItem="{Binding SelectedPhase}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center"
                                           Text="{Binding Name}" FontWeight="{Binding IsInitialPhase, Converter={StaticResource BoolToFontWeightConverter}}"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </TabItem>

            <TabItem Header="Settings" DataContext="{Binding SettingsVm}">
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <StackPanel Margin="0">
                        <TextBlock Margin="8,8,0,0" Foreground="Red" Text="Some features work only with locally built dotnet" Visibility="{Binding UseCustomRuntime, Converter={StaticResource InversedBooleanToVisibility}}"  />

						<StackPanel Margin="12,16,0,0" Orientation="Horizontal">
							<TextBlock Text="Font size:"/>
							<TextBox Margin="6,0,0,0" Width="220" Style="{StaticResource textBoxWithErrors}">
								<TextBox.Text>
									<Binding Path="FontSize" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
										<Binding.ValidationRules>
											<utils:ValidationRuleMinMaxInt Min="8" Max="50"></utils:ValidationRuleMinMaxInt>
										</Binding.ValidationRules>
									</Binding>
								</TextBox.Text>
							</TextBox>
							<TextBlock Margin="6,0,0,0" Text="(use CTRL+Mouse wheel inside Output to make larger / smaller)" Foreground="Gray"/>
						</StackPanel>						
                        <CheckBox Content="Show comments in asm" Margin="8,3" IsChecked="{Binding ShowAsmComments, Mode=TwoWay}"/>
                        <CheckBox Content="Use TieredCompilation" IsChecked="{Binding UseTieredJit, Mode=TwoWay}" Margin="8,3"/>
                        <CheckBox Content="Disable LightBulb integration" IsChecked="{Binding DisableLightBulb, Mode=TwoWay}" Margin="8,3"/>
                        <CheckBox Content="Use unloadable context" IsChecked="{Binding UseUnloadableContext, Mode=TwoWay}" Margin="8,3"/>
                        <CheckBox Content="Use JitDump instead of JitDisasm" IsEnabled="{Binding UseCustomRuntime}" IsChecked="{Binding JitDumpInsteadOfDisasm, Mode=TwoWay}" Margin="8,3"/>
                        <CheckBox IsEnabled="{Binding UseCustomRuntime}" IsChecked="{Binding PrintInlinees, Mode=TwoWay}" Margin="8,3">
                            <CheckBox.Content>
                                <TextBlock>
                                    <Run Text="Use Print-Inlinees instead of JitDisasm"/>
                                    <Run Foreground="Gray" Text="- prints a tree of inlining decisions for a specific method" />
                                </TextBlock>
                            </CheckBox.Content>
                        </CheckBox>
                        <CheckBox IsChecked="{Binding RunAppMode, Mode=TwoWay}" Margin="8,3">
                            <TextBlock TextWrapping="Wrap">
                                <Run Text="Use 'Run current app' mode"/>
                                <LineBreak/>
                                <Run Foreground="Gray" Text="Normally, Disasmo creates an AssemblyLoadContext, finds the specified method and precompiles it. In this mode it will just execute the current app (must be a ConsoleApp) - make sure your method is invoked (and is not inlined). Useful for PGO-related experiments."/>
                            </TextBlock>
                        </CheckBox>

                        <TextBlock Margin="8,12,8,4" Text="Reload strategy:"/>
                        <StackPanel Margin="12,0,0,0">
                            <RadioButton IsChecked="{Binding UseDotnetPublishForReload, Mode=TwoWay}" Margin="0,6,0,0">
                                <TextBlock TextWrapping="Wrap">
                                    <Run Text="dotnet publish"/>
                                    <Run Foreground="Gray" 
                                         Text=" -- Slow, but works in complex scenarios."/>
                                </TextBlock>
                            </RadioButton>
                            <RadioButton IsChecked="{Binding UseDotnetBuildForReload, Mode=TwoWay}" Margin="0,6,0,0">
                                <TextBlock TextWrapping="Wrap">
                                <Run Text="dotnet build"/>
                                <Run Foreground="Gray" 
                                     Text=""/>
                                </TextBlock>
                            </RadioButton>
                            <CheckBox Margin="18,4,0,2" IsChecked="{Binding UseNoRestoreFlag, Mode=TwoWay}">
                                <TextBlock>
                                    <Run Text="Use --no-restore --no-dependencies flag" />
                                    <Run Foreground="Gray" Text=" (makes it faster, but can lead to build issues)" />
                                </TextBlock>
                            </CheckBox>

                            <!--DontGuessTFM-->
                        </StackPanel>
                        <CheckBox Content="Don't guess project's TargetFramework" IsChecked="{Binding DontGuessTFM, Mode=TwoWay}" Margin="8,6,0,3"/>

                        <StackPanel Margin="12,16,0,0" Orientation="Horizontal">
                            <TextBlock Text="Path to Graphviz's dot.exe:"/>
                            <TextBox Margin="6,0,0,0" Width="220" Text="{Binding GraphvisDotPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock Margin="6,0,0,0" Text="(needed for flowgraphs)" Foreground="Gray"/>
                        </StackPanel>

                        <TextBlock Text="Custom Environment variables:" Margin="8,16,0,3"/>
                        <TextBox VerticalScrollBarVisibility="Visible" 
                                 Margin="8,0" 
                                 Height="140" 
                                 FontFamily="Consolas"
                                 FontSize="13"
                                 AcceptsReturn="True"
                                 TextWrapping="NoWrap"
                                 Text="{Binding CustomEnvVars, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="8,2,0,0">
                            <Run Text="See" Foreground="Gray"/>
                            <Hyperlink RequestNavigate="Hyperlink_OnRequestNavigate" NavigateUri="https://github.com/dotnet/runtime/blob/main/src/coreclr/jit/jitconfigvalues.h">jitconfigvalues.h</Hyperlink>
                            <Run Text="and" Foreground="Gray"/>
                            <Hyperlink RequestNavigate="Hyperlink_OnRequestNavigate" NavigateUri="https://github.com/dotnet/runtime/blob/main/src/coreclr/inc/clrconfigvalues.h">clrconfigvalues.h</Hyperlink>
                            <Run Text=" (all of them must be prefixed with 'DOTNET_')" Foreground="Gray"/>
                            <!-- TODO: implement comments -->
                            <!--LineBreak/>
                            <Run Text="You can use '//' to add comments" Foreground="Gray" /-->
                        </TextBlock>


                        <TextBlock Text="crossgen2 arguments:" Margin="8,16,0,3"/>
                        <TextBox VerticalScrollBarVisibility="Visible" 
                                 Margin="8,0" 
                                 Height="90" 
                                 FontFamily="Consolas"
                                 FontSize="13"
                                 AcceptsReturn="True"
                                 TextWrapping="Wrap"
                                 IsEnabled="{Binding UseCustomRuntime}"
                                 Text="{Binding Crossgen2Args, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="8,2,0,0">
                            <Run Text="See" Foreground="Gray"/>
                            <Hyperlink RequestNavigate="Hyperlink_OnRequestNavigate" NavigateUri="https://github.com/dotnet/runtime/blob/main/src/coreclr/tools/aot/crossgen2/Crossgen2RootCommand.cs#L16">Crossgen2RootCommand.cs#L16</Hyperlink>
                        </TextBlock>

                        <TextBlock Text="ILC (NativeAOT) arguments (experimental support in Disasmo):" Margin="8,16,0,3"/>
                        <TextBox VerticalScrollBarVisibility="Visible" 
                                 Margin="8,0" 
                                 Height="120" 
                                 FontFamily="Consolas"
                                 FontSize="13"
                                 AcceptsReturn="True"
                                 TextWrapping="Wrap"
                                 IsEnabled="{Binding UseCustomRuntime}"
                                 Text="{Binding IlcArgs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="S.R.Intrinsics">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Margin="8,0,0,0" Foreground="Gray" Text="Enter mnemonics to find corresponding System.Runtime.Intrinsics APIs"/>
                    <TextBlock Grid.Row="1" Margin="8,0,0,0" Foreground="Gray" Text="E.g. '_mm_add_epi8'"/>
                    <TextBox Grid.Row="2" Margin="8,6,0,6"
                        Width="363" HorizontalAlignment="Left" VerticalAlignment="Top" 
                        Text="{Binding IntrinsicsVm.Input, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <ListBox Grid.Row="3" HorizontalAlignment="Stretch" ItemsSource="{Binding IntrinsicsVm.Suggestions}" BorderThickness="0" Background="White">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Margin="0,3">
                                    <TextBox Text="{Binding Comments}" Background="Transparent" FontFamily="Consolas" Foreground="#5D9F5D" FontSize="14" BorderThickness="0" IsReadOnly="True"/>
                                    <TextBox Text="{Binding Method}" Background="Transparent" FontFamily="Consolas" FontWeight="Medium" FontSize="14"  BorderThickness="0" IsReadOnly="True"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <Grid Grid.RowSpan="5" Visibility="{Binding IntrinsicsVm.IsBusy, Converter={StaticResource BooleanToVisibility}}" 
                          Background="#A8FFFFFF">
                        <ProgressBar IsIndeterminate="True" Width="200" Height="20"/>
                        <TextBlock  Foreground="Black" Text="{Binding IntrinsicsVm.LoadingStatus}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,60,0,0" FontSize="14" />
                    </Grid>
                </Grid>
            </TabItem>

        </TabControl>

        <StatusBar Grid.Row="3">
            <StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" IsEnabled="{Binding SettingsVm.RunAppMode}">
                        <Run Text="Overridden JitDisasm:"/>
                    </TextBlock>
                    <TextBox Margin="6,2" Width="170" 
                             Text="{Binding SettingsVm.OverridenJitDisasm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             IsEnabled="{Binding SettingsVm.RunAppMode}"/>

                    <TextBlock Margin="20,0,0,0" VerticalAlignment="Center" IsEnabled="{Binding SettingsVm.RunAppMode}">
                        <Run Text="TargetFramework:"/>
                    </TextBlock>
                    <TextBox Margin="6,2" Width="90" 
                             Text="{Binding SettingsVm.OverridenTFM, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Disasmo v."/>
                    <TextBlock Text="{Binding SettingsVm.CurrentVersion}"/>

                    <StackPanel Orientation="Horizontal" >
                        <TextBlock Margin="20,0,0,0" Foreground="#871CAE" FontWeight="SemiBold"
                                   Visibility="{Binding SettingsVm.UpdateIsAvailable, Converter={StaticResource BooleanToVisibility}}">
                            <Hyperlink RequestNavigate="OnOpenReleaseNotes" 
                                       NavigateUri="https://github.com/EgorBo/Disasmo/blob/main/RELEASE_NOTES.md" 
                                       Foreground="#871CAE">Update is available</Hyperlink>
                        </TextBlock>
                        <TextBlock Margin="20,0,0,0" Foreground="#871CAE" FontWeight="SemiBold">
                            <Hyperlink RequestNavigate="OnOpenReleaseNotes" 
                                       NavigateUri="https://github.com/EgorBo/Disasmo/blob/main/RELEASE_NOTES.md" 
                                       Foreground="#871CAE">Disasmo release notes</Hyperlink>
                        </TextBlock>
                    </StackPanel>

                    <TextBlock Margin="72,0,0,0">
                        <Hyperlink RequestNavigate="OnOpenLogs" NavigateUri="logs">open logs</Hyperlink>
                    </TextBlock>
                    <TextBlock Margin="12,0,0,0">
                        <Hyperlink RequestNavigate="OnClearLogs" NavigateUri="clear logs">clear logs</Hyperlink>
                    </TextBlock>
                </StackPanel>
            </StackPanel>
            <TextBlock Margin="80,20,0,0" Text="{Binding StopwatchStatus}"/>
        </StatusBar>

        <CheckBox Content="JitDump" Grid.Row="2" Margin="380,3,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"
                  IsEnabled="{Binding SettingsVm.UseCustomRuntime}" IsChecked="{Binding SettingsVm.JitDumpInsteadOfDisasm, Mode=TwoWay}"/>

        <CheckBox Content="TieredJIT" Grid.Row="2" Margin="452,3,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"
                  IsChecked="{Binding SettingsVm.UseTieredJit, Mode=TwoWay}"/>

        <CheckBox Content="PGO" Grid.Row="2" Margin="526,3,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"
                  IsChecked="{Binding SettingsVm.UsePGO, Mode=TwoWay}"/>

        <CheckBox Content="Run" Grid.Row="2" Margin="578,3,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"
                  IsChecked="{Binding SettingsVm.RunAppMode, Mode=TwoWay}"/>

        <CheckBox Content="Diffable" Grid.Row="2" Margin="628,3,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"
                  IsChecked="{Binding SettingsVm.Diffable, Mode=TwoWay}"/>

        <Grid Grid.RowSpan="3" Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibility}}" Background="#66FFFFFF" >
            <ProgressBar IsIndeterminate="True" Width="200" Height="20"/>
            <Button Width="50" Height="20" Content="Cancel" Margin="260,0,0,0" Command="{Binding CancelCommand}"/>
            <TextBlock Foreground="Black" MaxWidth="600" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Text="{Binding LoadingStatus}" HorizontalAlignment="Center" 
                       VerticalAlignment="Center" Margin="0,80,0,0" FontSize="14" />
        </Grid>
        
    </Grid>
</UserControl>
